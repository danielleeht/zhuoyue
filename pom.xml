<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.zhuoyue</groupId>
	<artifactId>zhuoyue</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>zhuoyue</name>
	<description>zhuoyue</description>

	<modules>
		<module>zhuoyue-common</module>
		<module>zhuoyue-discovery</module>
		<module>zhuoyue-auth</module>
		<module>zhuoyue-gateway</module>
		<module>zhuoyue-ui</module>
		<module>zhuoyue-api</module>
		<module>zhuoyue-config</module>
		<module>zhuoyue-admin</module>
        <module>zhuoyue-article</module>
        <module>zhuoyue-book</module>
        <module>zhuoyue-crawler</module>
        <module>zhuoyue-radio</module>
        <module>zhuoyue-rank</module>
        <module>zhuoyue-tag</module>
        <module>zhuoyue-user</module>
	</modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <maven-compiler-plugin-version>3.5.1</maven-compiler-plugin-version>
        <frontend-maven-plugin.version>1.0</frontend-maven-plugin.version>
        <frontend-maven-plugin.node.version>v6.3.1</frontend-maven-plugin.node.version>
        <frontend-maven-plugin.npm.version>3.10.3</frontend-maven-plugin.npm.version>
        <maven.version>3.3.3</maven.version>
        <maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
        <spring-cloud-starter-parent.version>Brixton.SR5</spring-cloud-starter-parent.version>
        <platform-bom.version>Athens-RC1</platform-bom.version>
        <spring-boot.version>1.4.0.RELEASE</spring-boot.version>
        <spring-boot-admin.version>1.4.1</spring-boot-admin.version>
        <docker.image.prefix>spring-ng2-starter</docker.image.prefix>
        <docker.plugin.version>0.3.258</docker.plugin.version>
        <maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>
		<asciidoctor-maven-plugin.version>1.5.3</asciidoctor-maven-plugin.version>
    </properties>


	<profiles>
		<profile>
			<id>prod</id>
			<properties>
				<npm.build.command>run build:prod</npm.build.command>
				<default.spring.profiles>prod,docker</default.spring.profiles>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>com.spotify</groupId>
							<artifactId>docker-maven-plugin</artifactId>
							<version>${docker.plugin.version}</version>
							<executions>
								<execution>
									<phase>install</phase>
									<goals>
										<goal>build</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>dev</id>
			<properties>
				<npm.build.command>run build:dev</npm.build.command>
				<default.spring.profiles>prod,docker</default.spring.profiles>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>com.spotify</groupId>
							<artifactId>docker-maven-plugin</artifactId>
							<version>${docker.plugin.version}</version>
							<executions>
								<execution>
									<phase>install</phase>
									<goals>
										<goal>build</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>prod-standalone</id>
			<properties>
				<npm.build.command>run build:prod</npm.build.command>
				<default.spring.profiles>prod,standalone</default.spring.profiles>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>dev-standalone</id>
			<properties>
				<npm.build.command>run build:dev</npm.build.command>
				<default.spring.profiles>dev,standalone</default.spring.profiles>
			</properties>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
		</profile>
	</profiles>


	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.spring.platform</groupId>
				<artifactId>platform-bom</artifactId>
				<version>${platform-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-parent</artifactId>
				<version>${spring-cloud-starter-parent.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.zhuoyue</groupId>
				<artifactId>zhuoyue-common</artifactId>
				<version>${project.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin-version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.github.eirslett</groupId>
					<artifactId>frontend-maven-plugin</artifactId>
					<version>${frontend-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>install node and npm</id>
							<goals>
								<goal>install-node-and-npm</goal>
							</goals>
							<configuration>
								<nodeVersion>${frontend-maven-plugin.node.version}</nodeVersion>
								<npmVersion>${frontend-maven-plugin.npm.version}</npmVersion>
							</configuration>
						</execution>
						<execution>
							<id>npm install</id>
							<goals>
								<goal>npm</goal>
							</goals>
							<configuration>
								<arguments>install</arguments>
							</configuration>
						</execution>
						<execution>
							<id>npm build</id>
							<goals>
								<goal>npm</goal>
							</goals>
							<configuration>
								<arguments>${npm.build.command}</arguments>
							</configuration>
						</execution>
						<execution>
							<id>npm test</id>
							<phase>test</phase>
							<goals>
								<goal>npm</goal>
							</goals>
							<configuration>
								<arguments>run test</arguments>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<executable>true</executable>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker.plugin.version}</version>
					<configuration>
						<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
						<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
						<resources>
							<resource>
								<targetPath>/</targetPath>
								<directory>${project.build.directory}</directory>
								<include>${project.build.finalName}.jar</include>
							</resource>
							<resource>
								<targetPath>/</targetPath>
								<directory>${project.basedir}/../scripts</directory>
								<include>wait-for-service.sh</include>
							</resource>
						</resources>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<delimiters>
							<delimiter>@</delimiter>
						</delimiters>
						<useDefaultDelimiters>false</useDefaultDelimiters>
						<nonFilteredFileExtensions>
							<nonFilteredFileExtension>p12</nonFilteredFileExtension>
							<nonFilteredFileExtension>jks</nonFilteredFileExtension>
							<nonFilteredFileExtension>svg</nonFilteredFileExtension>
							<nonFilteredFileExtension>eot</nonFilteredFileExtension>
							<nonFilteredFileExtension>woff</nonFilteredFileExtension>
							<nonFilteredFileExtension>woff2</nonFilteredFileExtension>
							<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
						</nonFilteredFileExtensions>
					</configuration>
					<executions>
						<execution>
							<id>copy-resources</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.build.outputDirectory}/static/docs</outputDirectory>
								<resources>
									<resource>
										<directory>${project.build.directory}/generated-docs</directory>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.asciidoctor</groupId>
					<artifactId>asciidoctor-maven-plugin</artifactId>
					<version>${asciidoctor-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>generate-docs</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>process-asciidoc</goal>
							</goals>
							<configuration>
								<backend>html</backend>
								<doctype>book</doctype>
								<attributes>
									<snippets>${project.build.directory}/generated-snippets</snippets>
								</attributes>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${maven-enforcer-plugin.version}</version>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>${maven.version}</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>${java.version}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/libs-milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

</project>
